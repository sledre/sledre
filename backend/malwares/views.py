from os import fstat
from json import dumps
from django.http import FileResponse
from rest_framework import viewsets, mixins
from rest_framework.decorators import action
from rest_framework.exceptions import ValidationError
from rest_framework.generics import get_object_or_404
from rest_framework.views import APIView
from rest_framework.response import Response

from malwares.models import Malware
from malwares.serializers import MalwareSerializer
from jobs.models import Job, JobState
from utils.renderers import PassRenderer


class MalwareViewSet(
    mixins.CreateModelMixin,
    mixins.ListModelMixin,
    mixins.RetrieveModelMixin,
    mixins.DestroyModelMixin,
    viewsets.GenericViewSet,
):
    """ViewSet used to render Malware objects to user.
    It does not allow modification of existing objects.
    """

    queryset = Malware.objects.all()
    serializer_class = MalwareSerializer

    def perform_destroy(self, instance):
        """Hook malware object deletion to check that it is not being
        analyzed by a worker.

        Args:
            instance (Malware): Malware object being destroyed.

        Raises:
            ValidationError: You can't delete a malware in this state.
        """
        running_jobs = instance.jobs.filter(state=JobState.RUNNING)
        if running_jobs.exists():
            raise ValidationError("You can't delete a malware in this state.")
        instance.delete()

    @action(detail=True, methods=["get"], renderer_classes=(PassRenderer,))
    def download(self, request, pk=None):
        """Extra endpoint to download the malware.

        Args:
            request (request): Request made by user.
            pk (String, optional): Primary key of the Malware. (sha256)
                Defaults to None.

        Returns:
            FileResponse: Reponse containing the malware binary.
        """
        malware = get_object_or_404(Malware, pk=pk)

        file_handle = malware.file.open()

        response = FileResponse(file_handle, content_type="application/octet-stream")
        response["Content-Length"] = malware.file.size
        response["Content-Disposition"] = 'attachment; filename="%s"' % malware.sha256

        return response
