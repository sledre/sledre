from rest_framework import serializers

from malwares.models import Malware, MalwareFormat
from jobs.serializers import JobSerializer


class MalwareSerializer(serializers.ModelSerializer):
    """Serializer of a Malware object without rendering file path to users.
    Also append each job linked to a malware.
    """

    file = serializers.FileField(write_only=True)
    jobs = JobSerializer(many=True, read_only=True)
    state = serializers.SerializerMethodField()

    def validate(self, data):
        if data["format"] not in MalwareFormat.ALL:
            raise serializers.ValidationError(
                "format must be in %s" % MalwareFormat.ALL
            )
        return data

    def get_state(self, instance):
        """Return a malware state based on jobs states

        Args:
            instance (Malware): Malware that is being serialized

        Returns:
            String: Virtual state of a malware
        """
        states = set([job.state for job in instance.jobs.all()])
        if len(states) == 0:
            return "NO_JOBS"
        else:
            if "RUNNING" in states:
                return "RUNNING"
            elif len(states) == 1:
                return list(states)[0]
            else:
                return "RUNNING"

    class Meta:
        model = Malware
        fields = "__all__"
