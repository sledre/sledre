from hashlib import sha256, md5, sha512
from textwrap import wrap

from django.utils import timezone
from django.db import models


MALWARE_DIR = "/data/malwares"


def get_upload_filename(instance, filename):
    dirs = wrap(instance.sha256, 2)
    return MALWARE_DIR + "/" + "/".join(dirs[:5]) + "/" + instance.sha256


class MalwareFormat(object):
    EXE = 'exe'
    DLL = 'dll'


class MalwareState(object):
    NOT_STARTED = "NOT_STARTED"
    RUNNING = "RUNNING"
    DONE = "DONE"
    TIMED_OUT = "TIMED_OUT"


class Malware(models.Model):
    # Infos
    name = models.CharField(max_length=128, default="")
    label = models.CharField(max_length=50, default="")
    file = models.FileField(upload_to=get_upload_filename)
    upload_time = models.DateTimeField(auto_now_add=True, editable=False)

    # Hash
    md5 = models.CharField(max_length=33, editable=False)
    sha256 = models.CharField(max_length=65, primary_key=True, editable=False)
    sha512 = models.CharField(max_length=129, editable=False)

    # Config
    format = models.CharField(max_length=3, default="exe")
    export_dll = models.CharField(max_length=100, default="")

    def save(self, *args, **kwargs):
        # If it's a creation rather than an update, we compute the hashes
        if self._state.adding is True:
            file_content = self.file.read()

            self.sha256 = sha256(file_content).hexdigest()
            self.sha512 = sha512(file_content).hexdigest()
            self.md5 = md5(file_content).hexdigest()

        super().save(*args, **kwargs)
