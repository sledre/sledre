from django.http import FileResponse
from rest_framework import viewsets, mixins, renderers
from rest_framework.decorators import action
from rest_framework.exceptions import ValidationError
from rest_framework.generics import get_object_or_404

from malwaredb.models import Malware, MalwareState
from malwaredb.serializers import MalwareSerializer


class PassRenderer(renderers.BaseRenderer):
    """
        Return data as-is. View should supply a Response.
    """
    media_type = ''
    format = ''

    def render(self, data, accepted_media_type=None, renderer_context=None):
        return data


class MalwareViewSet(mixins.CreateModelMixin, mixins.ListModelMixin,
                     mixins.RetrieveModelMixin, mixins.DestroyModelMixin,
                     viewsets.GenericViewSet):
    queryset = Malware.objects.all()
    serializer_class = MalwareSerializer

    def perform_destroy(self, instance):
        if instance.state == MalwareState.ANALYZING:
            raise ValidationError("You can't delete a malware in this state")
        instance.delete()

    @action(detail=True, methods=['get'], renderer_classes=(PassRenderer,))
    def download(self, request, pk=None):
        malware = get_object_or_404(Malware, pk=pk)

        file_handle = malware.file.open()

        response = FileResponse(file_handle, content_type=malware.content_type)
        response['Content-Length'] = malware.file.size
        response['Content-Disposition'] = 'attachment; filename="%s"' % \
                                          malware.sha256

        return response
